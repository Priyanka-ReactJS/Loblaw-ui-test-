{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { useRef, useEffect, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport useModifiedProps from '../UseModifiedProps';\nimport useAxis from '../UseAxis';\nexport default function usePlotBandLineLifecycle(props, plotType) {\n  var _props$id = props.id,\n      id = _props$id === void 0 ? uuid : _props$id,\n      axisId = props.axisId,\n      children = props.children,\n      rest = _objectWithoutProperties(props, [\"id\", \"axisId\", \"children\"]);\n\n  var axis = useAxis(axisId);\n  var idRef = useRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      plotbandline = _useState2[0],\n      setPlotbandline = _useState2[1];\n\n  var modifiedProps = useModifiedProps(rest);\n  useEffect(function () {\n    if (!axis) return;\n\n    if (!plotbandline || modifiedProps !== false) {\n      if (!plotbandline) {\n        idRef.current = typeof id === 'function' ? id() : id;\n      }\n\n      var myId = idRef.current;\n\n      var opts = _objectSpread({\n        id: myId\n      }, rest);\n\n      if (plotbandline) axis.removePlotBandOrLine(idRef.current);\n      axis.addPlotBandOrLine(opts, plotType);\n      setPlotbandline({\n        id: myId,\n\n        get object() {\n          /* when parent axis is updated, the plotlines and plotbands are recreated\n             therefore the object can't be cached here\n          */\n          if (axis && axis.object && axis.object.plotLinesAndBands) {\n            return axis.object.plotLinesAndBands.find(function (plb) {\n              return plb.id === myId;\n            });\n          }\n\n          return null;\n        }\n\n      });\n    }\n  });\n  useEffect(function () {\n    return function () {\n      try {\n        axis.removePlotBandOrLine(idRef.current);\n      } catch (_unused) {// ignore as axis might have been already unmounted\n      }\n    };\n  }, []);\n  return plotbandline;\n}","map":{"version":3,"sources":["D:/React_Projects/loblaw-ui-test/test/node_modules/react-jsx-highcharts/dist/es/components/PlotBandLine/UsePlotBandLineLifecycle.js"],"names":["_objectSpread","_slicedToArray","_objectWithoutProperties","useRef","useEffect","useState","v4","uuid","useModifiedProps","useAxis","usePlotBandLineLifecycle","props","plotType","_props$id","id","axisId","children","rest","axis","idRef","_useState","_useState2","plotbandline","setPlotbandline","modifiedProps","current","myId","opts","removePlotBandOrLine","addPlotBandOrLine","object","plotLinesAndBands","find","plb","_unused"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,eAAe,SAASC,wBAAT,CAAkCC,KAAlC,EAAyCC,QAAzC,EAAmD;AAChE,MAAIC,SAAS,GAAGF,KAAK,CAACG,EAAtB;AAAA,MACIA,EAAE,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuBN,IAAvB,GAA8BM,SADvC;AAAA,MAEIE,MAAM,GAAGJ,KAAK,CAACI,MAFnB;AAAA,MAGIC,QAAQ,GAAGL,KAAK,CAACK,QAHrB;AAAA,MAIIC,IAAI,GAAGf,wBAAwB,CAACS,KAAD,EAAQ,CAAC,IAAD,EAAO,QAAP,EAAiB,UAAjB,CAAR,CAJnC;;AAMA,MAAIO,IAAI,GAAGT,OAAO,CAACM,MAAD,CAAlB;AACA,MAAII,KAAK,GAAGhB,MAAM,EAAlB;;AAEA,MAAIiB,SAAS,GAAGf,QAAQ,CAAC,IAAD,CAAxB;AAAA,MACIgB,UAAU,GAAGpB,cAAc,CAACmB,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,YAAY,GAAGD,UAAU,CAAC,CAAD,CAF7B;AAAA,MAGIE,eAAe,GAAGF,UAAU,CAAC,CAAD,CAHhC;;AAKA,MAAIG,aAAa,GAAGhB,gBAAgB,CAACS,IAAD,CAApC;AACAb,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACc,IAAL,EAAW;;AAEX,QAAI,CAACI,YAAD,IAAiBE,aAAa,KAAK,KAAvC,EAA8C;AAC5C,UAAI,CAACF,YAAL,EAAmB;AACjBH,QAAAA,KAAK,CAACM,OAAN,GAAgB,OAAOX,EAAP,KAAc,UAAd,GAA2BA,EAAE,EAA7B,GAAkCA,EAAlD;AACD;;AAED,UAAIY,IAAI,GAAGP,KAAK,CAACM,OAAjB;;AAEA,UAAIE,IAAI,GAAG3B,aAAa,CAAC;AACvBc,QAAAA,EAAE,EAAEY;AADmB,OAAD,EAErBT,IAFqB,CAAxB;;AAIA,UAAIK,YAAJ,EAAkBJ,IAAI,CAACU,oBAAL,CAA0BT,KAAK,CAACM,OAAhC;AAClBP,MAAAA,IAAI,CAACW,iBAAL,CAAuBF,IAAvB,EAA6Bf,QAA7B;AACAW,MAAAA,eAAe,CAAC;AACdT,QAAAA,EAAE,EAAEY,IADU;;AAGd,YAAII,MAAJ,GAAa;AACX;AACV;AACA;AACU,cAAIZ,IAAI,IAAIA,IAAI,CAACY,MAAb,IAAuBZ,IAAI,CAACY,MAAL,CAAYC,iBAAvC,EAA0D;AACxD,mBAAOb,IAAI,CAACY,MAAL,CAAYC,iBAAZ,CAA8BC,IAA9B,CAAmC,UAAUC,GAAV,EAAe;AACvD,qBAAOA,GAAG,CAACnB,EAAJ,KAAWY,IAAlB;AACD,aAFM,CAAP;AAGD;;AAED,iBAAO,IAAP;AACD;;AAda,OAAD,CAAf;AAiBD;AACF,GAlCQ,CAAT;AAmCAtB,EAAAA,SAAS,CAAC,YAAY;AACpB,WAAO,YAAY;AACjB,UAAI;AACFc,QAAAA,IAAI,CAACU,oBAAL,CAA0BT,KAAK,CAACM,OAAhC;AACD,OAFD,CAEE,OAAOS,OAAP,EAAgB,CAAC;AAClB;AACF,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,SAAOZ,YAAP;AACD","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { useRef, useEffect, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport useModifiedProps from '../UseModifiedProps';\nimport useAxis from '../UseAxis';\nexport default function usePlotBandLineLifecycle(props, plotType) {\n  var _props$id = props.id,\n      id = _props$id === void 0 ? uuid : _props$id,\n      axisId = props.axisId,\n      children = props.children,\n      rest = _objectWithoutProperties(props, [\"id\", \"axisId\", \"children\"]);\n\n  var axis = useAxis(axisId);\n  var idRef = useRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      plotbandline = _useState2[0],\n      setPlotbandline = _useState2[1];\n\n  var modifiedProps = useModifiedProps(rest);\n  useEffect(function () {\n    if (!axis) return;\n\n    if (!plotbandline || modifiedProps !== false) {\n      if (!plotbandline) {\n        idRef.current = typeof id === 'function' ? id() : id;\n      }\n\n      var myId = idRef.current;\n\n      var opts = _objectSpread({\n        id: myId\n      }, rest);\n\n      if (plotbandline) axis.removePlotBandOrLine(idRef.current);\n      axis.addPlotBandOrLine(opts, plotType);\n      setPlotbandline({\n        id: myId,\n\n        get object() {\n          /* when parent axis is updated, the plotlines and plotbands are recreated\n             therefore the object can't be cached here\n          */\n          if (axis && axis.object && axis.object.plotLinesAndBands) {\n            return axis.object.plotLinesAndBands.find(function (plb) {\n              return plb.id === myId;\n            });\n          }\n\n          return null;\n        }\n\n      });\n    }\n  });\n  useEffect(function () {\n    return function () {\n      try {\n        axis.removePlotBandOrLine(idRef.current);\n      } catch (_unused) {// ignore as axis might have been already unmounted\n      }\n    };\n  }, []);\n  return plotbandline;\n}"]},"metadata":{},"sourceType":"module"}