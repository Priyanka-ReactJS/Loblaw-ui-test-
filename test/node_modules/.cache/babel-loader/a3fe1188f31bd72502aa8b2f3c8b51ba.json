{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\loblaw-ui-test\\\\test\\\\src\\\\component\\\\Chart.js\";\nimport React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Chart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: {\n        chart: {\n          type: \"pie\",\n          marginBottom: 100\n        },\n        title: {\n          text: this.props.titleName\n        },\n        subtitle: {\n          text: (this.props.data.reduce((accumulator, obj) => accumulator + obj.y, 0) / 1000).toFixed(2) + \" TWh\",\n          floating: true,\n          style: {\n            fontSize: 14,\n            fontWeight: \"bold\",\n            color: \"#000000\"\n          },\n          y: 170\n        },\n        series: [{\n          data: this.props.data\n        }],\n        ...this.props.userConfig\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      this.setState({\n        chartData: { ...this.state.chartData,\n          subtitle: {\n            text: (this.props.data.reduce((accumulator, obj) => accumulator + obj.y, 0) / 1000).toFixed(2) + \" TWh\"\n          },\n          series: [{\n            data: this.props.data\n          }]\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: this.state.chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["D:/React_Projects/loblaw-ui-test/test/src/component/Chart.js"],"names":["React","Component","Highcharts","HighchartsReact","Chart","state","chartData","chart","type","marginBottom","title","text","props","titleName","subtitle","data","reduce","accumulator","obj","y","toFixed","floating","style","fontSize","fontWeight","color","series","userConfig","componentDidUpdate","prevProps","prevState","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB;AACNC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,KADD;AAELC,UAAAA,YAAY,EAAE;AAFT,SADE;AAKTC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AADZ,SALE;AAQTC,QAAAA,QAAQ,EAAE;AACRH,UAAAA,IAAI,EACF,CACE,KAAKC,KAAL,CAAWG,IAAX,CAAgBC,MAAhB,CACE,CAACC,WAAD,EAAcC,GAAd,KAAsBD,WAAW,GAAGC,GAAG,CAACC,CAD1C,EAEE,CAFF,IAGI,IAJN,EAKEC,OALF,CAKU,CALV,IAKe,MAPT;AAQRC,UAAAA,QAAQ,EAAE,IARF;AASRC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,EADL;AAELC,YAAAA,UAAU,EAAE,MAFP;AAGLC,YAAAA,KAAK,EAAE;AAHF,WATC;AAcRN,UAAAA,CAAC,EAAE;AAdK,SARD;AAwBTO,QAAAA,MAAM,EAAE,CACN;AACEX,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADnB,SADM,CAxBC;AA6BT,WAAG,KAAKH,KAAL,CAAWe;AA7BL;AADL,KADoB;AAAA;;AAmC5BC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAI,KAAKlB,KAAL,CAAWG,IAAX,KAAoBc,SAAS,CAACd,IAAlC,EAAwC;AACtC,WAAKgB,QAAL,CAAc;AACZzB,QAAAA,SAAS,EAAE,EACT,GAAG,KAAKD,KAAL,CAAWC,SADL;AAETQ,UAAAA,QAAQ,EAAE;AACRH,YAAAA,IAAI,EACF,CACE,KAAKC,KAAL,CAAWG,IAAX,CAAgBC,MAAhB,CACE,CAACC,WAAD,EAAcC,GAAd,KAAsBD,WAAW,GAAGC,GAAG,CAACC,CAD1C,EAEE,CAFF,IAGI,IAJN,EAKEC,OALF,CAKU,CALV,IAKe;AAPT,WAFD;AAWTM,UAAAA,MAAM,EAAE,CACN;AACEX,YAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADnB,WADM;AAXC;AADC,OAAd;AAmBD;AACF;;AAEDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,UAAU,EAAE9B,UADd;AAEE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWC;AAFtB;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAQD;;AApE2B;;AAuE9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nclass Chart extends Component {\r\n  state = {\r\n    chartData: {\r\n      chart: {\r\n        type: \"pie\",\r\n        marginBottom: 100\r\n      },\r\n      title: {\r\n        text: this.props.titleName\r\n      },\r\n      subtitle: {\r\n        text:\r\n          (\r\n            this.props.data.reduce(\r\n              (accumulator, obj) => accumulator + obj.y,\r\n              0\r\n            ) / 1000\r\n          ).toFixed(2) + \" TWh\",\r\n        floating: true,\r\n        style: {\r\n          fontSize: 14,\r\n          fontWeight: \"bold\",\r\n          color: \"#000000\"\r\n        },\r\n        y: 170\r\n      },\r\n      series: [\r\n        {\r\n          data: this.props.data\r\n        }\r\n      ],\r\n      ...this.props.userConfig\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.data !== prevProps.data) {\r\n      this.setState({\r\n        chartData: {\r\n          ...this.state.chartData,\r\n          subtitle: {\r\n            text:\r\n              (\r\n                this.props.data.reduce(\r\n                  (accumulator, obj) => accumulator + obj.y,\r\n                  0\r\n                ) / 1000\r\n              ).toFixed(2) + \" TWh\"\r\n          },\r\n          series: [\r\n            {\r\n              data: this.props.data\r\n            }\r\n          ]\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={this.state.chartData}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}