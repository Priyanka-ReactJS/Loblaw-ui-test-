{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext, useState, useEffect, useDebugValue } from 'react';\nimport SeriesContext from '../SeriesContext';\nimport useChart from '../UseChart';\nimport createProvidedSeries from '../Series/createProvidedSeries';\nexport default function useSeries(seriesId) {\n  var contextSeries = useContext(SeriesContext);\n  var chart = useChart();\n\n  var createStateSeries = function createStateSeries() {\n    if (contextSeries) return contextSeries;\n\n    if (seriesId) {\n      var mySeries = chart.get(seriesId);\n      return createProvidedSeries(mySeries);\n    }\n\n    return null;\n  };\n\n  var _useState = useState(createStateSeries),\n      _useState2 = _slicedToArray(_useState, 2),\n      providedSeries = _useState2[0],\n      setProvidedSeries = _useState2[1];\n\n  useEffect(function () {\n    if (providedSeries) return; // we already had series\n    // series should now be created\n\n    setProvidedSeries(createStateSeries());\n  }, []);\n  useDebugValue(providedSeries ? providedSeries.id : null);\n  return providedSeries;\n}","map":{"version":3,"sources":["D:/React_Projects/loblaw-ui-test/test/node_modules/react-jsx-highcharts/dist/es/components/UseSeries/index.js"],"names":["_slicedToArray","useContext","useState","useEffect","useDebugValue","SeriesContext","useChart","createProvidedSeries","useSeries","seriesId","contextSeries","chart","createStateSeries","mySeries","get","_useState","_useState2","providedSeries","setProvidedSeries","id"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,EAA0CC,aAA1C,QAA+D,OAA/D;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,eAAe,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC1C,MAAIC,aAAa,GAAGT,UAAU,CAACI,aAAD,CAA9B;AACA,MAAIM,KAAK,GAAGL,QAAQ,EAApB;;AAEA,MAAIM,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnD,QAAIF,aAAJ,EAAmB,OAAOA,aAAP;;AAEnB,QAAID,QAAJ,EAAc;AACZ,UAAII,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAUL,QAAV,CAAf;AACA,aAAOF,oBAAoB,CAACM,QAAD,CAA3B;AACD;;AAED,WAAO,IAAP;AACD,GATD;;AAWA,MAAIE,SAAS,GAAGb,QAAQ,CAACU,iBAAD,CAAxB;AAAA,MACII,UAAU,GAAGhB,cAAc,CAACe,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,cAAc,GAAGD,UAAU,CAAC,CAAD,CAF/B;AAAA,MAGIE,iBAAiB,GAAGF,UAAU,CAAC,CAAD,CAHlC;;AAKAb,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIc,cAAJ,EAAoB,OADA,CACQ;AAC5B;;AAEAC,IAAAA,iBAAiB,CAACN,iBAAiB,EAAlB,CAAjB;AACD,GALQ,EAKN,EALM,CAAT;AAMAR,EAAAA,aAAa,CAACa,cAAc,GAAGA,cAAc,CAACE,EAAlB,GAAuB,IAAtC,CAAb;AACA,SAAOF,cAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext, useState, useEffect, useDebugValue } from 'react';\nimport SeriesContext from '../SeriesContext';\nimport useChart from '../UseChart';\nimport createProvidedSeries from '../Series/createProvidedSeries';\nexport default function useSeries(seriesId) {\n  var contextSeries = useContext(SeriesContext);\n  var chart = useChart();\n\n  var createStateSeries = function createStateSeries() {\n    if (contextSeries) return contextSeries;\n\n    if (seriesId) {\n      var mySeries = chart.get(seriesId);\n      return createProvidedSeries(mySeries);\n    }\n\n    return null;\n  };\n\n  var _useState = useState(createStateSeries),\n      _useState2 = _slicedToArray(_useState, 2),\n      providedSeries = _useState2[0],\n      setProvidedSeries = _useState2[1];\n\n  useEffect(function () {\n    if (providedSeries) return; // we already had series\n    // series should now be created\n\n    setProvidedSeries(createStateSeries());\n  }, []);\n  useDebugValue(providedSeries ? providedSeries.id : null);\n  return providedSeries;\n}"]},"metadata":{},"sourceType":"module"}