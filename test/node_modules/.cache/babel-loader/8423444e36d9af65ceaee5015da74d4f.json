{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\loblaw-ui-test\\\\test\\\\src\\\\components\\\\dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; // import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Table,Container, Row, Col } from 'react-bootstrap';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCampaignDetails } from \"../store/actions/campaign\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450 // backgroundColor: 'red',\n\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nfunction Dashboard(props) {\n  _s();\n\n  const classes = useStyles();\n  const campaignId = props.location.campaigns.id;\n  const campaign = props.location.campaigns;\n  let api_url = \"http://localhost:4000/campaigns\"; //TODO : for store\n  //   const dispatch = useDispatch();\n  //   const [campaignDetails, setCampaign] = useState();\n  //   const campaignData = useSelector((state) => state.campaignState.campaignDetails)\n  //   useEffect(() => {\n  //     if (campaignId) {\n  //         dispatch(getCampaignDetails(campaign, 0))\n  //     }\n  // }, [campaignDetails, dispatch])\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async num => {\n      const result = await fetch(api_url + '/' + campaignId + '?number=' + num).then(response => {\n        console.log(response);\n        return response.json();\n      }).catch(err => {\n        throw new Error(err);\n      });\n      setData(result);\n    };\n\n    let num = 0;\n    fetchData(num);\n    const interval = setInterval(() => {\n      num++;\n      fetchData(num);\n    }, 5000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Word of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          children: \"adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), '\"a benevolent smile\"']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Learn More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        className: classes.gridList,\n        cols: 2.5,\n        children: [console.log(data), /*#__PURE__*/_jsxDEV(GridListTile, {\n          children: /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: 'Most Recent Impressions',\n            classes: {\n              root: classes.titleBar,\n              title: classes.title\n            },\n            actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": `star ${data.impressions}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: data.impressions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 71\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 89\n          }, this), data.impressions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"QDDCSAe0uXoJ7FZ+7kOFOZZsHaA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/React_Projects/loblaw-ui-test/test/src/components/dashboard.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","getCampaignDetails","makeStyles","Grid","GridList","GridListTile","GridListTileBar","IconButton","Paper","Card","CardActions","CardContent","Button","Typography","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","padding","spacing","textAlign","color","text","secondary","bullet","margin","transform","title","fontSize","pos","marginBottom","Dashboard","props","classes","campaignId","location","campaigns","id","campaign","api_url","data","setData","fetchData","num","result","fetch","then","response","console","log","json","catch","err","Error","interval","setInterval","clearInterval","bull","titleBar","impressions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Table,Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCampaignDetails } from \"../store/actions/campaign\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n    // backgroundColor: 'red',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\nfunction Dashboard(props) {\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const campaignId = props.location.campaigns.id;\r\n  const campaign = props.location.campaigns;\r\n  let api_url = \"http://localhost:4000/campaigns\";\r\n\r\n  //TODO : for store\r\n//   const dispatch = useDispatch();\r\n//   const [campaignDetails, setCampaign] = useState();\r\n//   const campaignData = useSelector((state) => state.campaignState.campaignDetails)\r\n//   useEffect(() => {\r\n//     if (campaignId) {\r\n//         dispatch(getCampaignDetails(campaign, 0))\r\n//     }\r\n// }, [campaignDetails, dispatch])\r\n\r\n\r\nconst [data, setData] = useState([])\r\nuseEffect(() => {\r\n        const fetchData = async (num) => {\r\n            const result = await fetch(api_url+'/'+campaignId+'?number='+num).then(response => {\r\n              console.log(response);\r\n                return response.json()\r\n            }) .catch(err => {\r\n                throw new Error(err)\r\n              })\r\n            setData(result)\r\n        }\r\n        let num = 0;\r\n        fetchData(num);\r\n        const interval = setInterval(() => {\r\n          num++;\r\n          fetchData(num)\r\n        }, 5000);\r\n        return ()=>{ clearInterval(interval)}\r\n    }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          be{bull}nev{bull}o{bull}lent\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          adjective\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n      <Grid>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n          {console.log(data)}\r\n            <GridListTile>\r\n                <GridListTileBar\r\n                  title={'Most Recent Impressions'}\r\n                  classes={{\r\n                    root: classes.titleBar,\r\n                    title: classes.title,\r\n                  }}\r\n                  actionIcon={\r\n                    <IconButton aria-label={`star ${data.impressions}`}>\r\n                    </IconButton>\r\n                  }\r\n                />\r\n              \r\n            </GridListTile>\r\n            <Paper className={classes.paper}><b>{data.impressions}</b><br></br><br></br><br></br>{data.impressions}</Paper>\r\n\r\n        </GridList>\r\n\r\n      </Grid>\r\n    \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}