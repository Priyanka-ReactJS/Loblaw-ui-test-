{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext, useState, useEffect, useDebugValue } from 'react';\nimport AxisContext from '../AxisContext';\nimport useChart from '../UseChart';\nimport createProvidedAxis from '../Axis/createProvidedAxis';\nexport default function useAxis(axisId) {\n  var chart = useChart();\n  var contextAxis = useContext(AxisContext);\n\n  var createStateAxis = function createStateAxis() {\n    if (contextAxis) return contextAxis;\n\n    if (axisId) {\n      var axis = chart.get(axisId);\n      return createProvidedAxis(axis);\n    }\n\n    return null;\n  };\n\n  var _useState = useState(createStateAxis),\n      _useState2 = _slicedToArray(_useState, 2),\n      providedAxis = _useState2[0],\n      setProvidedAxis = _useState2[1];\n\n  useEffect(function () {\n    if (providedAxis) return; // we already had axis\n    // axis should now be created\n\n    setProvidedAxis(createStateAxis());\n  }, []);\n  useDebugValue(providedAxis ? providedAxis.id : null);\n  return providedAxis;\n}","map":{"version":3,"sources":["D:/React_Projects/loblaw-ui-test/test/node_modules/react-jsx-highcharts/dist/es/components/UseAxis/index.js"],"names":["_slicedToArray","useContext","useState","useEffect","useDebugValue","AxisContext","useChart","createProvidedAxis","useAxis","axisId","chart","contextAxis","createStateAxis","axis","get","_useState","_useState2","providedAxis","setProvidedAxis","id"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,EAA0CC,aAA1C,QAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,eAAe,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AACtC,MAAIC,KAAK,GAAGJ,QAAQ,EAApB;AACA,MAAIK,WAAW,GAAGV,UAAU,CAACI,WAAD,CAA5B;;AAEA,MAAIO,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C,QAAID,WAAJ,EAAiB,OAAOA,WAAP;;AAEjB,QAAIF,MAAJ,EAAY;AACV,UAAII,IAAI,GAAGH,KAAK,CAACI,GAAN,CAAUL,MAAV,CAAX;AACA,aAAOF,kBAAkB,CAACM,IAAD,CAAzB;AACD;;AAED,WAAO,IAAP;AACD,GATD;;AAWA,MAAIE,SAAS,GAAGb,QAAQ,CAACU,eAAD,CAAxB;AAAA,MACII,UAAU,GAAGhB,cAAc,CAACe,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,YAAY,GAAGD,UAAU,CAAC,CAAD,CAF7B;AAAA,MAGIE,eAAe,GAAGF,UAAU,CAAC,CAAD,CAHhC;;AAKAb,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIc,YAAJ,EAAkB,OADE,CACM;AAC1B;;AAEAC,IAAAA,eAAe,CAACN,eAAe,EAAhB,CAAf;AACD,GALQ,EAKN,EALM,CAAT;AAMAR,EAAAA,aAAa,CAACa,YAAY,GAAGA,YAAY,CAACE,EAAhB,GAAqB,IAAlC,CAAb;AACA,SAAOF,YAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext, useState, useEffect, useDebugValue } from 'react';\nimport AxisContext from '../AxisContext';\nimport useChart from '../UseChart';\nimport createProvidedAxis from '../Axis/createProvidedAxis';\nexport default function useAxis(axisId) {\n  var chart = useChart();\n  var contextAxis = useContext(AxisContext);\n\n  var createStateAxis = function createStateAxis() {\n    if (contextAxis) return contextAxis;\n\n    if (axisId) {\n      var axis = chart.get(axisId);\n      return createProvidedAxis(axis);\n    }\n\n    return null;\n  };\n\n  var _useState = useState(createStateAxis),\n      _useState2 = _slicedToArray(_useState, 2),\n      providedAxis = _useState2[0],\n      setProvidedAxis = _useState2[1];\n\n  useEffect(function () {\n    if (providedAxis) return; // we already had axis\n    // axis should now be created\n\n    setProvidedAxis(createStateAxis());\n  }, []);\n  useDebugValue(providedAxis ? providedAxis.id : null);\n  return providedAxis;\n}"]},"metadata":{},"sourceType":"module"}